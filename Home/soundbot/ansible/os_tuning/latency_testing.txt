Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-07-27T12:42:05-04:00

====== latency testing ======
Created Thursday 27 July 2017

====== clocksource ======

currently set as TSC

to change current clocksource to HPET
/sys/devices/system/clocksource/clocksource0 $ echo hpet |sudo tee current_clocksource

and in /etc/default/grub on the cmd_line options

clocksource=hpet


====== opinions and info on cloucksource ======

from a thread;

//Why TSC over HPET://

//TSC is the fastest since the cycle value is stored in a CPU register, which can be quickly retrieved using the RDTSC instruction. HPET is a hardware timer and access overhead is pretty high when multiple CPUs try to access it (since access is serialized in hardware). TSC is synchronized across all cores (on Nehalem+ CPUs)*. HPET may not be mapped yet when the scheduler first runs so it's better and faster to use TSC.//

//Why HPET over TSC://

//HPET can produce higher resolution periodic interrupts than TSC, which provides low resolution values.//

//* There is a small drift on older CPUs with different config but that should be tolerable.//


https://access.redhat.com/solutions/18627


====== rt-tests ======

running cyclictest without any stress:

{{{code: lang="sh" linenumbers="False"
[b08x@calculon rt-tests] $ sudo ./cyclictest -a -t -n -p99
# /dev/cpu_dma_latency set to 0us
policy: fifo: loadavg: 0.00 0.01 0.00 1/642 27746          

T: 0 (27667) P:99 I:1000 C:  66979 Min:      1 Act:    1 Avg:    1 Max:      30
T: 1 (27668) P:99 I:1500 C:  44653 Min:      1 Act:    2 Avg:    1 Max:     135
T: 2 (27669) P:99 I:2000 C:  33489 Min:      1 Act:    2 Avg:    1 Max:       6
T: 3 (27670) P:99 I:2500 C:  26791 Min:      1 Act:    2 Avg:    2 Max:       9
T: 4 (27671) P:99 I:3000 C:  22326 Min:      1 Act:    2 Avg:    1 Max:       5
T: 5 (27672) P:99 I:3500 C:  19137 Min:      1 Act:    2 Avg:    2 Max:       7
T: 6 (27673) P:99 I:4000 C:  16744 Min:      1 Act:    2 Avg:    1 Max:       9
T: 7 (27674) P:99 I:4500 C:  14884 Min:      1 Act:    2 Avg:    2 Max:      10
}}}



//seems that cpu 0,1 get used the most...in attempting which cores to use for audio apps ("cpu affinity") and which cores to isolate (cores not being used for audio apps) //


https://wiki.linuxfoundation.org/realtime/documentation/howto/tools/rteval

https://wiki.linuxfoundation.org/realtime/documentation/howto/tools/worstcaselatency


====== conjecture ======
@jambot




====== things to try ======

would like to try isolating cores 0-5
then setting the audio card cpu-affinity to 6,7


set isolated_cores in /etc/tuned/realtime-variables.conf

**isolated_cores=4-7 **


and in tuna -g set irq 68 (snd_intel:card0) to sched_fifo priority 95 with cpu affinity 4-7


//didnt really help with the calf fluildsynth plugin using the kick sf...still getting the clicking....perhaps just a shitty soundfont file?//
//slight improvement with zynaddsubfx - not noticing any clicks using the keyboard//

look into using taskset when starting audio apps
~~e.g. taskset 04 ardour~~
taskset -c 4,5,6,7 qjackctl

--------------------



question: why is alsactl running with a nice priority of 19? 

root       781  0.0  0.0  17144  2832 ?        SNs  08:28   0:00 /usr/sbin/alsactl -s -n 19 -c -E ALSA_CONFIG_PATH=/etc/alsa/alsactl.conf --initfile=/lib/alsa/init/00main rdaemon

if we have to, edit /usr/lib/systemd/system/alsa-state.service to set the nice to something with a a more favorable priority ( i dunno, like -10)


Tuesday 08/08/2017 06:04

ok, tried setting alsa nice to -10. this is after install rt kernel

after restarting alsa-state service, we get this error;



{{{code: lang="sh" linenumbers="False"
alsactl[17883]: /usr/sbin/alsactl: do_nice:160nice(-10): No such file or directory
}}}

we'll see if that means anything later



might help to add us to the input group
usermod -a -G input b08x





